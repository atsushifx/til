<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://api.github.com/repos/atsushifx/til/commits/latest</id>
    <title>atsushifx / TIL</title>
    <updated>2025-04-19T16:42:39.000Z</updated>
    <generator>https://github.com/atsushifx/commit2feed</generator>
    <author>
        <name>atsushifx</name>
        <uri>https://github.com/atsushifx</uri>
    </author>
    <link rel="alternate" href="https://api.github.com/repos/atsushifx/til/commits/latest"/>
    <subtitle>Latest 10 commits for atsushifx / TIL</subtitle>
    <entry>
        <title type="html"><![CDATA[feat(205-04-19): Markdown対応パーサの開発、ChatGPTプロンプトのカスタマイズ]]></title>
        <id>99387753b39eaa7a63267694e41f3bb66eb7dfd4</id>
        <link href="https://github.com/atsushifx/til/commit/99387753b39eaa7a63267694e41f3bb66eb7dfd4"/>
        <updated>2025-04-19T16:42:39.000Z</updated>
        <summary type="html"><![CDATA[feat(205-04-19): Markdown対応パーサの開発、ChatGPTプロンプトのカスタマイズ]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月19日

#### 📦 プロジェクト：TOML対応、Markdown解析プラグインの開発

1. MarkdownProcessor の TOML 対応
2. TypeScript ビルド・型安全対応
3. fixture ベースのテスト実行フレームの構築

#### ChatGPTカスタマイズプロンプト作成

1. メインのエルファに対し、補助的なキャラを追加
   小紅 (一途な妹系ヒロイン)]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(2020-04): 4月18日のTIL: templateのドキュメント強化、チャットボット強化]]></title>
        <id>38587a7fea3632840297a24da0c8f03bab8d46d4</id>
        <link href="https://github.com/atsushifx/til/commit/38587a7fea3632840297a24da0c8f03bab8d46d4"/>
        <updated>2025-04-18T14:55:21.000Z</updated>
        <summary type="html"><![CDATA[feat(2020-04): 4月18日のTIL: templateのドキュメント強化、チャットボット強化

- Windows向けにライター環境構築の手順と使用ツールの意図を整理し、quickstartドキュメントを作成
- エルファを中心としたchatbotプロンプトの再設計とHシーン構造テンプレートの策定を記録]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月18日

#### ライター向けセットアップガイドの作成

1. **ライター向けセットアップガイドの初期設計**
   - Windows環境での導入に特化した `quickstart-for-writers.md` を作成
   - Markdown 執筆時の余計な設定作業を排除し、集中できる環境の基盤を整備

2. **GitHub Pages + Jekyll を活用した公開準備**
   - 日本語版 `/ja/` へのアクセス導線として `docs/index.html` にリダイレクト処理を追加
   - 将来の Zola 移行を見据えて、TOML フロントマター形式で全ドキュメントを統一]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(2025-04-17): templateを整備]]></title>
        <id>c675bd7910b12734bb8ad003a372ec71d3dd87d5</id>
        <link href="https://github.com/atsushifx/til/commit/c675bd7910b12734bb8ad003a372ec71d3dd87d5"/>
        <updated>2025-04-17T15:20:12.000Z</updated>
        <summary type="html"><![CDATA[feat(2025-04-17): templateを整備

- 日本語ドキュメントの整備
- templatesディレクトリ下にドキュメントライティング用設定を整備し、インストールスクリプトを追加]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月17日

1. OSSテンプレート用に日本語ドキュメント一式を整備
   - `README.ja.md`, `LICENSE.ja`, `CONTRIBUTING.ja.md`, `CODE_OF_CONDUCT.ja.md` を追加
   - 日本語ユーザー向けの導入ドキュメントを完備し、`docs:` スコープでまとめてコミット

2. writer向け Linter セットアップスクリプトを実装
   - `installLinter.ps1` を作成し、PowerShell で `textlint`, `markdownlint-cli2`, `cspell` をインストール
   - `.textlintrc.yaml`, `.markdownlint.yaml`, `.cspell.json` などをテンプレートからコピー
   - `--global` や `--destination` パラメータに対応、RoboCopy を使って既存ファイルを安全に保持

3. textlint のルールを整備]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025-04): TOMLパーサ組み込み成功、CIテストも通過]]></title>
        <id>3e6df14584696e0da7a9d7773b4478707bf7352e</id>
        <link href="https://github.com/atsushifx/til/commit/3e6df14584696e0da7a9d7773b4478707bf7352e"/>
        <updated>2025-04-16T13:04:28.000Z</updated>
        <summary type="html"><![CDATA[docs(2025-04): TOMLパーサ組み込み成功、CIテストも通過]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年5月16日

- MarkdownProcessor に TOML 対応パーサを組み込み、Textlint プラグインのテストを整備
  1. モノレポ環境でのテスト実行整備
     - 各パッケージで test:ci を走らせるために、lerna を導入
     - ルートから lerna run test:ci で一括実行可能に
     - vitest を使って fixture ベースのテストを構築
  2. MarkdownProcessor の型定義・Processor 実装の整理
     - availableExtensions() を追加して .md 対応を明示
     - preProcess() で AST を返すよう parse() を統合
     - postProcess() の戻り値を TextlintPluginPostProcessResult に修正し、型エラーを完全解消
  3. Textlint プラグインとしての動作確認]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(parser): add TOML frontmatter support to markdown-to-ast]]></title>
        <id>7c64915e889c9ba3fe5e4f37d9eb186585145c24</id>
        <link href="https://github.com/atsushifx/til/commit/7c64915e889c9ba3fe5e4f37d9eb186585145c24"/>
        <updated>2025-04-14T18:42:29.000Z</updated>
        <summary type="html"><![CDATA[feat(parser): add TOML frontmatter support to markdown-to-ast

- Added TOML frontmatter parsing (+-enclosed) to `markdown-to-ast`.
- Enhanced AST tests with TxtNode assertions and helper functions.
- Refactored test structure for categorized fixtures.
- Introduced TOML-specific test cases, including edge scenarios.]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月14日

- textlint の markdown-to-ast パッケージを改修して、TOML 対応の者を作成した。
  🔧 作業内容一覧

  1. 既存 textlint 構造の調査・模倣:
     - textlint/markdown-to-ast の parse() / test/fixtures 構成を確認。
     - input.md + output.json のペアで AST を比較する形式に対応。

  2. パーサに TOML frontmatter 対応追加:
     - +++ で囲まれた TOML frontmatter を検出し、Toml ノードに変換
     - YAML (---) と同様の扱いで、文書先頭にのみ適用]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(filter): add ignoreFrontmatterFilterRule and utility for frontmatter range]]></title>
        <id>13ee76d1f955247ff9964e9c940399f28da3c82e</id>
        <link href="https://github.com/atsushifx/til/commit/13ee76d1f955247ff9964e9c940399f28da3c82e"/>
        <updated>2025-04-13T13:52:08.000Z</updated>
        <summary type="html"><![CDATA[feat(filter): add ignoreFrontmatterFilterRule and utility for frontmatter range

- Implement `ignoreFrontmatterFilterRule` to ignore YAML (---) / TOML (+++) frontmatter
- Design `getFrontmatterRange` utility for range-based filtering

build(env): setup development environment with ESM and vitest

- Configure BDD-style testing environment using vitest
- Enable testing with textlint kernel and markdown plugin

test(filter): develop filter with TDD approach

- Verify functionality with `ngWordRule` sample rule
- Add support for TOML frontmatter
- Validate AST structure using unified + remark-frontmatter

refactor: organize structure and improve debugging

- Consolidate test runner into `textlintTestRunner`
- Restructure directories for rules and tests
- Add debugging support with `console.debug` for filter ranges and AST]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月13日

- ✅ textlint フィルターの開発と設計
  - YAML (---) / TOML (+++) frontmatter を無視するための ignoreFrontmatterFilterRule を実装
  - getFrontmatterRange ユーティリティを設計し、範囲指定でフィルタリング可能に
- 🛠 開発環境構築（ESM, vitest, textlint-kernel）
  - vitest を使った BDD スタイルのテスト環境を整備
  - textlint kernel と markdown plugin の組み合わせでテスト可能に
- 🧪 テスト駆動でのフィルター開発
  - ngWordRule によるサンプルルールで動作確認
  - TOML フロントマターへの対応確認
  - unified + remark-frontmatter を使った AST 構造の検証も実施]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(2025-04): 20225年4月12日の作業を記録]]></title>
        <id>181d96ba70019fde3a619a08fb2ed42cd495110f</id>
        <link href="https://github.com/atsushifx/til/commit/181d96ba70019fde3a619a08fb2ed42cd495110f"/>
        <updated>2025-04-12T10:42:27.000Z</updated>
        <summary type="html"><![CDATA[feat(2025-04): 20225年4月12日の作業を記録]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月12日

- [skip-frontmatterフィルター](https://github.com/atsushifx/textlint-filter-rule-skip-frontmatter) 開発用に、開発環境を設定
  typescript, tsup によるビルド環境、dprint によるフォーマット, eslint の設定など
- [skip-frontmatterフィルター](https://github.com/atsushifx/textlint-filter-rule-skip-frontmatter) で、vitest, textlint-tester用のテスト環境を構築

- `pnpm-workspace.yaml` は不要なため削除（monorepo 構成ではない）。
- 将来の npm 公開に向けて `README.md`, CI 設定, npm 公開設定を進行予定。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(2025/04): 4月10日分の更新]]></title>
        <id>4e4b6caff3dd18097b83aafcce7392383317f80f</id>
        <link href="https://github.com/atsushifx/til/commit/4e4b6caff3dd18097b83aafcce7392383317f80f"/>
        <updated>2025-04-10T16:10:18.000Z</updated>
        <summary type="html"><![CDATA[feat(2025/04): 4月10日分の更新]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月10日

- [開発環境セットアップガイド (インデックス)](https://zenn.dev/atsushifx/articles/wsl2-setup-overview)
を執筆。

- Zola による静的ブログの構築。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(2025-04): 2025年4月用のTILページを設定]]></title>
        <id>efa5a7192236e9b21547e6d2f5646f051c3ff0cc</id>
        <link href="https://github.com/atsushifx/til/commit/efa5a7192236e9b21547e6d2f5646f051c3ff0cc"/>
        <updated>2025-04-05T02:06:19.000Z</updated>
        <summary type="html"><![CDATA[feat(2025-04): 2025年4月用のTILページを設定]]></summary>
        <content type="html"><![CDATA[.vscode/cspell/dicts/til.dic

Zora
------
docs/2025/2025-04.md

---
title: 2025-04
layout: default
---

## 2025年4月分

### 2025年4月3日 ～ 5日

- Zora による静的ブログの構築]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[fix(2025-03): 英単語への空白挿入、不要な空行の削除]]></title>
        <id>a2efd2dad6ccba544e6f68cdf645012b685f82de</id>
        <link href="https://github.com/atsushifx/til/commit/a2efd2dad6ccba544e6f68cdf645012b685f82de"/>
        <updated>2025-03-25T06:08:06.000Z</updated>
        <summary type="html"><![CDATA[fix(2025-03): 英単語への空白挿入、不要な空行の削除]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-03.md

- Zenn に[はじめての apt 設定とアップグレード](https://zenn.dev/atsushifx/articles/wsl2-setup-apt-basics-and-maintenance)を追加
- Zenn に[Debian を快適に使うための APT 設定とメンテナンス](https://zenn.dev/atsushifx/articles/wsl2-config-debian-apt-maintenance)を追加]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
</feed>
