<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://api.github.com/repos/atsushifx/til/commits/latest</id>
    <title>atsushifx / TIL</title>
    <updated>2025-05-10T23:05:50.000Z</updated>
    <generator>https://github.com/atsushifx/commit2feed</generator>
    <author>
        <name>atsushifx</name>
        <uri>https://github.com/atsushifx</uri>
    </author>
    <link rel="alternate" href="https://api.github.com/repos/atsushifx/til/commits/latest"/>
    <subtitle>Latest 10 commits for atsushifx / TIL</subtitle>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月10日): 環境変数マネージャー、仕様設計]]></title>
        <id>a10bad5116a03f51fb4190233a5145943d1b90a5</id>
        <link href="https://github.com/atsushifx/til/commit/a10bad5116a03f51fb4190233a5145943d1b90a5"/>
        <updated>2025-05-10T23:05:50.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月10日): 環境変数マネージャー、仕様設計]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月10日  - 環境変数数マネージャー仕様設計

Zennの記事作成用に、再度、仕様設計。
スコープ仕様、および `Sync`の仕様を若干リファクタリング

#### ✅ スコープ仕様の整理

関数呼び出し時のスコープはenumを導入し、型安全に。
enumにエイリアスを導入し、ユーザーにとってわかりやすい呼び出しを可能に。

| スコープ | エイリアス |意味 | 反映範囲 |
| ---  | --- | --- | --- |]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月9日):  refactor PowerShell 環境変数マネージャのリファクタとTDD対応]]></title>
        <id>e34089f2772d97e32f5c01a9794109c48e8c26e3</id>
        <link href="https://github.com/atsushifx/til/commit/e34089f2772d97e32f5c01a9794109c48e8c26e3"/>
        <updated>2025-05-09T14:40:10.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月9日):  refactor PowerShell 環境変数マネージャのリファクタとTDD対応]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月9日  - PowerShell 環境変数マネージャのリファクタとTDD対応

#### 🔧 実施内容

- `AgEnv` クラスを `_AgEnvManager` にリネームし、内部実装として明示
- 環境変数の設定処理 `_setEnv()` を `NoSync` 対応付きで再設計
 - 同期処理は `Scope != CURRENT` のときにのみ適用
 - `_setEnvScoped()` によって1スコープ限定の操作を明確化
- `-WhatIf` 処理は外部関数側（`agSetEnv`）に集約し、クラス内には持たせない方針
-  ProtectedKeys（保護変数）検出用の `_isProtected()` を調整
- テストスクリプト側も Describe/Context 構造で再整理し、モジュール化
 - テストケースは `MOCK_ENV` に統一し、例外発生を安定して検証]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月8日): VSCode拡張 `dprint-vscode` にて Logger 出力が行われないバグを修正]]></title>
        <id>b3b9788b8fbc3381206531ae9b06719c61da11b3</id>
        <link href="https://github.com/atsushifx/til/commit/b3b9788b8fbc3381206531ae9b06719c61da11b3"/>
        <updated>2025-05-08T20:09:32.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月8日): VSCode拡張 `dprint-vscode` にて Logger 出力が行われないバグを修正]]></summary>
        <content type="html"><![CDATA[.vale.ini


------
docs/2025/2025-05.md

#### 2025年5月8日  - `dprint`のVSCode拡張のBugFix

#### 🐞 VSCode拡張 `dprint-vscode` にて Logger 出力が行われないバグを修正

- 🧩 原因
  - Logger や OutputChannel が activateLsp / activateLegacy の切り替え時に毎回生成されていた
  - dispose() のタイミングで、共有インスタンスが破棄されてしまい、ログが出力されなくなっていた

- 🔧 対応内容
  - Logger / OutputChannel をシングルトンに変更し、再初期化に強い構造へ変更
  - 拡張全体で使い回される Logger インスタンスを Logger.getLogger() で取得する方式に統一
  - リソースの管理、破棄を専用クラスでローカルによる管理に切り替え]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[merge: sync from remote]]></title>
        <id>4e0f5c6ef385ea9e01e9904a1f72eaaa23daf7e1</id>
        <link href="https://github.com/atsushifx/til/commit/4e0f5c6ef385ea9e01e9904a1f72eaaa23daf7e1"/>
        <updated>2025-05-06T20:41:33.000Z</updated>
        <summary type="html"><![CDATA[merge: sync from remote]]></summary>
        <content type="html"><![CDATA[docs/rss/feeds.xml

    <updated>2025-05-06T17:32:10.000Z</updated>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月6日): tdd環境稿陸の記事を執筆 / valeの設定</title>
        <id>ce28ae9acf8d5d44a8e8b40fb39fb05448fc78de</id>
        <link href="https://github.com/atsushifx/til/commit/ce28ae9acf8d5d44a8e8b40fb39fb05448fc78de"/>
        <updated>2025-05-06T17:32:10.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月6日): tdd環境稿陸の記事を執筆 / valeの設定</summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

#### 2025年5月6日  -  TDD環境稿陸の記事を執筆 / valeの設定

#### ✅ PowerShell TDD環境構築記事を執筆！📘]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[chore(config): move configs files to configs directory]]></title>
        <id>ec43044a4c3439f20747470723da9505619df05c</id>
        <link href="https://github.com/atsushifx/til/commit/ec43044a4c3439f20747470723da9505619df05c"/>
        <updated>2025-05-06T20:40:28.000Z</updated>
        <summary type="html"><![CDATA[chore(config): move configs files to configs directory]]></summary>
        <content type="html"><![CDATA[.commitlintrc.ts


------
.editorconfig

## @(#) : editorconfig common template for atsushifx
##
# @version  1.2.0
# @date     2025-01-31
# @author   atsushifx <atsushuifx@gmail.com>
# Common editor settings for general programming and documentation files.
# Applies consistent indentation and line-ending rules.
### Base Settings
# Markdown
[*.md]
indent_size = 2
tab_width = 2]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月6日): tdd環境稿陸の記事を執筆 / valeの設定]]></title>
        <id>ce28ae9acf8d5d44a8e8b40fb39fb05448fc78de</id>
        <link href="https://github.com/atsushifx/til/commit/ce28ae9acf8d5d44a8e8b40fb39fb05448fc78de"/>
        <updated>2025-05-06T17:32:10.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月6日): tdd環境稿陸の記事を執筆 / valeの設定]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

#### 2025年5月6日  -  TDD環境稿陸の記事を執筆 / valeの設定

#### ✅ PowerShell TDD環境構築記事を執筆！📘

- Pester v5 を使ったユニットテストの導入方法を、実践＋対話形式＋デバッグ付きでまとめた。
-  runTests.ps1、sample.Tests.ps1、sample.ps1 含む3点セットのコードを整理して、初学者にも優しい構成に。
- $ScriptRoot のスコープ罠や BeforeAll での読み込みといった 実践でつまづきやすいポイントも丁寧に解説。
- エルファ・こべに・つむぎと一緒に進めることで、TDDとバイブコーディングの両立という新しいスタイルを提示！

#### ✅ `.vale.ini` の調整で Git コミットメッセージのチェック抑制

- `COMMIT_EDITMSG` が誤って `vale` に拾われてしまう問題に対処。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[chore(til): add words]]></title>
        <id>7f0f68aec28bc3f9c267940d9b5e0a0c558c3dc4</id>
        <link href="https://github.com/atsushifx/til/commit/7f0f68aec28bc3f9c267940d9b5e0a0c558c3dc4"/>
        <updated>2025-05-06T17:31:28.000Z</updated>
        <summary type="html"><![CDATA[chore(til): add words]]></summary>
        <content type="html"><![CDATA[.vscode/cspell/dicts/til.dic

eget]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[chore(workflows): add secret scan action]]></title>
        <id>17e649c160600d27989f3a0ed89d17be3125f9f4</id>
        <link href="https://github.com/atsushifx/til/commit/17e649c160600d27989f3a0ed89d17be3125f9f4"/>
        <updated>2025-05-05T15:51:14.000Z</updated>
        <summary type="html"><![CDATA[chore(workflows): add secret scan action]]></summary>
        <content type="html"><![CDATA[.github/workflows/ci-secrets-scan.yaml

name: Scan secrets for CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  GITLEAKS_VERSION: 8.25.1]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月5日): 5月5日分の更新: 設定ファイルをconfigs/下に移動]]></title>
        <id>b3d5f4c6c531e6f310d1d8044d383da54231a87e</id>
        <link href="https://github.com/atsushifx/til/commit/b3d5f4c6c531e6f310d1d8044d383da54231a87e"/>
        <updated>2025-05-05T14:48:14.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月5日): 5月5日分の更新: 設定ファイルをconfigs/下に移動]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

#### 2025年5月5日 GitHub Actions + dprint + Secretlint関連の整理と改善

#### 1. `eget`を使ったGitHub Actionsセットアップの懸念点整理
-
 `eget` を使用してツールをインストールするカスタムアクションのアイデアを検討。
- セキュリティ上の懸念 (そのままでは、どんなツールでもインストールできる点）に気づき、**AllowListの導入が必須**と確認。
- GitHub Actions で実行されるアクションにおいて、外部ツール取得時の信頼性確保の必要性を再認識。

### 2. `dprint` の VSCode Extension 挙動に関する問題発見と対応案

- プロジェクトルートに `dprint.json` が存在しないと VSCode 側で formatter が動作しない問題に遭遇。
- `"dprint fmt"` に引数で設定ファイルを指定できれば解決できるが、現行拡張では未対応。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月4日): Zennの記事の仕上げ、公開]]></title>
        <id>e655fbf61a6a1f7b9695c0c73ea507a836c6afac</id>
        <link href="https://github.com/atsushifx/til/commit/e655fbf61a6a1f7b9695c0c73ea507a836c6afac"/>
        <updated>2025-05-04T14:26:20.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月4日): Zennの記事の仕上げ、公開]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月3日 - 技術ブログの仕上げ、GitHub Action"secrets-scan.yaml"の作成

#### 技術ブログ記事の校正・推敲

 技術記事「WSL 2 の初期設定: `XDG`準拠で設定する作業ディレクトリ」の最終レビューを実施。

以下の改善を加えた：

- 「この記事」など語り口を微調整し、全体のトーンをカジュアル寄りのプロフェッショナルに統一。
- 冗長な表現・二重否定の簡略化、文末処理の均一化。
- dotfiles やスクリプトの説明部分の接続詞や構成順を最適化し、読みやすさを向上。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
</feed>
