<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://api.github.com/repos/atsushifx/til/commits/latest</id>
    <title>atsushifx / TIL</title>
    <updated>2025-05-23T15:16:12.000Z</updated>
    <generator>https://github.com/atsushifx/commit2feed</generator>
    <author>
        <name>atsushifx</name>
        <uri>https://github.com/atsushifx</uri>
    </author>
    <link rel="alternate" href="https://api.github.com/repos/atsushifx/til/commits/latest"/>
    <subtitle>Latest 10 commits for atsushifx / TIL</subtitle>
    <entry>
        <title type="html"><![CDATA[docs(2025/05/23): shared/common新設ほか]]></title>
        <id>ca978874ec13823e9602d9db4a8fd0b6b9612c2f</id>
        <link href="https://github.com/atsushifx/til/commit/ca978874ec13823e9602d9db4a8fd0b6b9612c2f"/>
        <updated>2025-05-23T15:16:12.000Z</updated>
        <summary type="html"><![CDATA[docs(2025/05/23): shared/common新設ほか]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月23日 -  GHAツール開発

#### **/shared/common 新設**

- TypeScript 共通型・定数の一元化を目的に `/shared/common` ディレクトリを新設。
- モノレポ全体での再利用性・保守性を重視した構造設計を強化。

#### **base configs ファイルのアップデート**

- `/shared/configs` 配下の ESLint, Secretlint, tsup, vitest など **base設定ファイル群**を `/shared/common` 仕様に対応。
- 各種 config 内のパス解決や import 記述を、**新しい共通ディレクトリ構成**に合わせて修正。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月21日): easy-set-toolsの開発進捗]]></title>
        <id>f0c6b8e58919a54c4433bf2b2ea6d2b667fc0d1c</id>
        <link href="https://github.com/atsushifx/til/commit/f0c6b8e58919a54c4433bf2b2ea6d2b667fc0d1c"/>
        <updated>2025-05-21T15:55:34.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月21日): easy-set-toolsの開発進捗

- 開発進捗
- TILのマークダウンのエラーをFix]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月21日 -  GHAツール開発

#### 1. リポジトリ名／パッケージ構成の見直し

- GitHub Actions 用リポジトリ名を `easy-setup-tools-action` に決定
- `/shared` ディレクトリを共通コード用パッケージとして切り出し
  - `package.json` を `@easy-setup-tools/shared`（private）に設定
  - `shared/src` 配下に `constants/`・`types/` を移動し、`src/index.ts` で一括エクスポート
  - ESM-only 方針で `tsup.config.ts` を調整

#### 2. 定数整理と JSDoc ドキュメント化]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月124日): typesctiptをアロー関数などのモダンか、eslintによるlintほか]]></title>
        <id>29ae00a34852965e9beb49ebd6d2c6d431282e4c</id>
        <link href="https://github.com/atsushifx/til/commit/29ae00a34852965e9beb49ebd6d2c6d431282e4c"/>
        <updated>2025-05-16T15:06:36.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月124日): typesctiptをアロー関数などのモダンか、eslintによるlintほか]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月15日  - egetDownload GitHub Actionsの開発

#### 1. インストーラリファクタ（昨日実施）

- EgetInitializer を AgActionInstallerExecutor として実装
- NotSupportedExecutor を追加し、AgExecutorsMap に全タイプ登録
- E2E テストで initializer.execute(options) と eget --version を検証

#### 2. 型定義の整備

- `src/shared/types/AgActionToolConfig.types.ts` を作成
  - AgActionToolConfigBase（共通: type, tool, options）]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月14日): GItHub Action / setup-tool-with-egetの開発]]></title>
        <id>ed20aa6f6d460ec20aa72cd66b41c0c6747a6110</id>
        <link href="https://github.com/atsushifx/til/commit/ed20aa6f6d460ec20aa72cd66b41c0c6747a6110"/>
        <updated>2025-05-14T19:48:38.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月14日): GItHub Action / setup-tool-with-egetの開発]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月14日  - egetDownload GitHub Actionsの開発

1. `getExistEget`モジュールの開発
   - vitestによるMock化、正常系、異常系のテスト
   - `vi.mocked` を用いた型付きモック化の手法を習得

2. `prepareInstallDirectory`モジュールの開発
   - `fs/promises.mkdir` と `@actions/core.addPath`  を `vi.mock／vi.spyOn` でモック
   - GitHub Actions 上で PATH に追加する処理の検証

3. `getPlatform` ユーティリティ実装とテスト
    - `os.platform()` → `windows`|`linux`に正規化する関数を作成]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月13日): 環境変数マネージャーの実装と記事作成]]></title>
        <id>1b15c4b2a2875dec8a5d3418857ca4aa542b2bf2</id>
        <link href="https://github.com/atsushifx/til/commit/1b15c4b2a2875dec8a5d3418857ca4aa542b2bf2"/>
        <updated>2025-05-13T15:38:37.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月13日): 環境変数マネージャーの実装と記事作成]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月13日  - 環境変数マネージャーの実装  / 環境変数マネージャー実装に関する記事を作成

#### 環境変数マネージャークラスをTDDで実装

-  `_agEnvCore` クラスを中心に、Pester を使った TDD で機能を段階的に実装
- **Raw 操作**:  `SetRaw`/`_GetRaw`/`_RemoveRaw`/`IsEnvExist `をまず実装・テスト
- **``Get` メソッド}**: 内部の `_GetRaw` を呼び出す公開 API として実装し、明示的なスコープ指定に統一
- **`Set` メソッド**: `Name`, `Value`, `Scope`, `Sync` を受け取り、Sync=true 時に`User`/`Current`を同時設定。返値は`"Name = Value"`
- **`Remove` メソッド**:  Sync=true 時に User→Current 同時削除、返り値は削除した変数名
- 各テストで `BeforeEach`/`AfterEach` を使い、環境変数の準備とクリーンアップを自動化
- コミット履歴は機能単位でSquashし、意味のあるメッセージに整理]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月10日): 環境変数マネージャー、仕様設計]]></title>
        <id>a10bad5116a03f51fb4190233a5145943d1b90a5</id>
        <link href="https://github.com/atsushifx/til/commit/a10bad5116a03f51fb4190233a5145943d1b90a5"/>
        <updated>2025-05-10T23:05:50.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月10日): 環境変数マネージャー、仕様設計]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月10日  - 環境変数数マネージャー仕様設計

Zennの記事作成用に、再度、仕様設計。
スコープ仕様、および `Sync`の仕様を若干リファクタリング

#### ✅ スコープ仕様の整理

関数呼び出し時のスコープはenumを導入し、型安全に。
enumにエイリアスを導入し、ユーザーにとってわかりやすい呼び出しを可能に。

| スコープ | エイリアス |意味 | 反映範囲 |
| ---  | --- | --- | --- |]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月9日):  refactor PowerShell 環境変数マネージャのリファクタとTDD対応]]></title>
        <id>e34089f2772d97e32f5c01a9794109c48e8c26e3</id>
        <link href="https://github.com/atsushifx/til/commit/e34089f2772d97e32f5c01a9794109c48e8c26e3"/>
        <updated>2025-05-09T14:40:10.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月9日):  refactor PowerShell 環境変数マネージャのリファクタとTDD対応]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月9日  - PowerShell 環境変数マネージャのリファクタとTDD対応

#### 🔧 実施内容

- `AgEnv` クラスを `_AgEnvManager` にリネームし、内部実装として明示
- 環境変数の設定処理 `_setEnv()` を `NoSync` 対応付きで再設計
 - 同期処理は `Scope != CURRENT` のときにのみ適用
 - `_setEnvScoped()` によって1スコープ限定の操作を明確化
- `-WhatIf` 処理は外部関数側（`agSetEnv`）に集約し、クラス内には持たせない方針
-  ProtectedKeys（保護変数）検出用の `_isProtected()` を調整
- テストスクリプト側も Describe/Context 構造で再整理し、モジュール化
 - テストケースは `MOCK_ENV` に統一し、例外発生を安定して検証]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月8日): VSCode拡張 `dprint-vscode` にて Logger 出力が行われないバグを修正]]></title>
        <id>b3b9788b8fbc3381206531ae9b06719c61da11b3</id>
        <link href="https://github.com/atsushifx/til/commit/b3b9788b8fbc3381206531ae9b06719c61da11b3"/>
        <updated>2025-05-08T20:09:32.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月8日): VSCode拡張 `dprint-vscode` にて Logger 出力が行われないバグを修正]]></summary>
        <content type="html"><![CDATA[.vale.ini


------
docs/2025/2025-05.md

#### 2025年5月8日  - `dprint`のVSCode拡張のBugFix

#### 🐞 VSCode拡張 `dprint-vscode` にて Logger 出力が行われないバグを修正

- 🧩 原因
  - Logger や OutputChannel が activateLsp / activateLegacy の切り替え時に毎回生成されていた
  - dispose() のタイミングで、共有インスタンスが破棄されてしまい、ログが出力されなくなっていた

- 🔧 対応内容
  - Logger / OutputChannel をシングルトンに変更し、再初期化に強い構造へ変更
  - 拡張全体で使い回される Logger インスタンスを Logger.getLogger() で取得する方式に統一
  - リソースの管理、破棄を専用クラスでローカルによる管理に切り替え]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[merge: sync from remote]]></title>
        <id>4e0f5c6ef385ea9e01e9904a1f72eaaa23daf7e1</id>
        <link href="https://github.com/atsushifx/til/commit/4e0f5c6ef385ea9e01e9904a1f72eaaa23daf7e1"/>
        <updated>2025-05-06T20:41:33.000Z</updated>
        <summary type="html"><![CDATA[merge: sync from remote]]></summary>
        <content type="html"><![CDATA[docs/rss/feeds.xml

    <updated>2025-05-06T17:32:10.000Z</updated>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月6日): tdd環境稿陸の記事を執筆 / valeの設定</title>
        <id>ce28ae9acf8d5d44a8e8b40fb39fb05448fc78de</id>
        <link href="https://github.com/atsushifx/til/commit/ce28ae9acf8d5d44a8e8b40fb39fb05448fc78de"/>
        <updated>2025-05-06T17:32:10.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月6日): tdd環境稿陸の記事を執筆 / valeの設定</summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

#### 2025年5月6日  -  TDD環境稿陸の記事を執筆 / valeの設定

#### ✅ PowerShell TDD環境構築記事を執筆！📘]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[chore(config): move configs files to configs directory]]></title>
        <id>ec43044a4c3439f20747470723da9505619df05c</id>
        <link href="https://github.com/atsushifx/til/commit/ec43044a4c3439f20747470723da9505619df05c"/>
        <updated>2025-05-06T20:40:28.000Z</updated>
        <summary type="html"><![CDATA[chore(config): move configs files to configs directory]]></summary>
        <content type="html"><![CDATA[.commitlintrc.ts


------
.editorconfig

## @(#) : editorconfig common template for atsushifx
##
# @version  1.2.0
# @date     2025-01-31
# @author   atsushifx <atsushuifx@gmail.com>
# Common editor settings for general programming and documentation files.
# Applies consistent indentation and line-ending rules.
### Base Settings
# Markdown
[*.md]
indent_size = 2
tab_width = 2]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
</feed>
