<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://api.github.com/repos/atsushifx/til/commits/latest</id>
    <title>atsushifx / TIL</title>
    <updated>2025-04-30T14:59:32.000Z</updated>
    <generator>https://github.com/atsushifx/commit2feed</generator>
    <author>
        <name>atsushifx</name>
        <uri>https://github.com/atsushifx</uri>
    </author>
    <link rel="alternate" href="https://api.github.com/repos/atsushifx/til/commits/latest"/>
    <subtitle>Latest 10 commits for atsushifx / TIL</subtitle>
    <entry>
        <title type="html"><![CDATA[docs(2025年4月30日): 2025年4月30日のTILを追加]]></title>
        <id>db6e56903eb6394a607ce3b1a945d97cf250dd73</id>
        <link href="https://github.com/atsushifx/til/commit/db6e56903eb6394a607ce3b1a945d97cf250dd73"/>
        <updated>2025-04-30T14:59:32.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年4月30日): 2025年4月30日のTILを追加

- Debinの日本語化について解説を執筆]]></summary>
        <content type="html"><![CDATA[.textlint/dict/smarthr/prh-idiomatic-usage.yml


------
docs/2025/2025-04.md

### 2025年4月40日  --  Zenn用記事リライト

### 1. WSL初期セットアップ手順の文書化

- `wsl.conf` による systemd 有効化、マウント設定、localhost 共有などの詳細を整理。
- `/etc/wsl.conf` の例とともに、各セクションの役割を明記。
- Debian ベースの配布を想定し、ユーザー視点での導入ガイドとして仕上げた。

### 2. 日本語対応の最小構成パッケージ設計

- `tasksel` を使わず、最小限で日本語化する方法を調査・記録。
- `fonts-noto-cjk`, `locales` など必要なパッケージを明示。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年4月29日): セットアップスクリプトで環境変数用のスクリプト関数を開発]]></title>
        <id>d43f8a493986c233c645dd51c644ef2f7c9ab0bd</id>
        <link href="https://github.com/atsushifx/til/commit/d43f8a493986c233c645dd51c644ef2f7c9ab0bd"/>
        <updated>2025-04-29T15:54:36.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年4月29日): セットアップスクリプトで環境変数用のスクリプト関数を開発]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月29日  --  セットアップスクリプト

#### 🛠 作業・開発まとめ

- AgEnv (Environment Variable Manager) 完成
  - **AgEnvScope enum**を定義して、`CURRENT` / `USER` / `SYSTEM` スコープに対応
  - **AgEnvクラス**を作成し、内部ヘルパー (`_setEnv`, `_getEnv`, `_removeEnv`) を整理
  - スクリプト関数 (`agSetEnv`, `agGetEnv`, `agRemoveEnv`, `agSetEnvFromList`) を実装
  - **デフォルト Scope を USER、同期 On** に統一し、開発者負担を最小化
  - **保護対象変数の設定**と、**空白チェック＆トリミング**による堅牢化を実施]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年4月28日): チャットボットプロンプトの強化、TDD用スクリプトの強化など]]></title>
        <id>16de952b8632e8356318a422f5798b6454d16fc2</id>
        <link href="https://github.com/atsushifx/til/commit/16de952b8632e8356318a422f5798b6454d16fc2"/>
        <updated>2025-04-28T14:48:28.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年4月28日): チャットボットプロンプトの強化、TDD用スクリプトの強化など]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月28日  --  リポジトリセットアップスクリプト / チャットボットPrompt

#### mkdirFromList関数のモジュール化とリファクタリング

- 内部ヘルパー createDirectoryWithCurrent を切り出し、モジュールスコープ管理に統一
- パイプライン入力と通常パラメータ両対応で、begin-process-end 構成にリファクタリング
- Mock で作成パスリストを記録し、mkdirFromList の複数ディレクトリ作成テストを堅牢化

#### チャットボットプロンプトのブラッシュアップ

- ✨ 改善ポイントまとめ
  - モード分離の徹底整理]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年4月27日): README.mdの作成 / チャットボットプロンプトの更新]]></title>
        <id>da6b146a314ef8b6cbd233a74a3603590ced7805</id>
        <link href="https://github.com/atsushifx/til/commit/da6b146a314ef8b6cbd233a74a3603590ced7805"/>
        <updated>2025-04-27T16:19:18.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年4月27日): README.mdの作成 / チャットボットプロンプトの更新]]></summary>
        <content type="html"><![CDATA[.textlint/dict/smarthr/prh-idiomatic-usage.yml


------
.textlintrc.yaml

  preset-japanese:
  sentence-length:
    max: 100
------
.vale.ini

Google.Exclamation = No
Google.Quotes = No
------
docs/2025/2025-04.md

### 2025年4月27日  --  リポジトリセットアップスクリプト / チャットボットPrompt

#### README.md (英語版)の作成

- **Vale（文章 Lint ツール）**のルール対応を行ない、以下の工夫を入れて Lint クリア。
  - .vale.ini にて `Google.Exclamation`など不要なルールをオフに
  - その他、コメントにて`<-- value \<rule\> = No -->`をいれ、エラーを解除
- Issues, PRs の GitHub リンクでリポジトリを `atsushifx/aglabo-setup-scripts`にして正常なリンクに修正
- チームクレジットを明記
  `This project is maintained by atsushifx and Oniisama Universe (Elpha, Kobeni, Tsumugi).`を追加

#### ✍️ ドキュメント設計、作成方針の確認]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年4月26日): リポジトリセットアップスクリプトを別リポジトリで開発]]></title>
        <id>5a486d8c5848b54f398558a8caa31c3a852ac977</id>
        <link href="https://github.com/atsushifx/til/commit/5a486d8c5848b54f398558a8caa31c3a852ac977"/>
        <updated>2025-04-26T16:21:24.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年4月26日): リポジトリセットアップスクリプトを別リポジトリで開発]]></summary>
        <content type="html"><![CDATA[.vale.ini

# src: ~/.config/vale/.vale.ini
### @(#)  : vale default config
#
# @version	1.0.0
# @date		2035-04-22
# @author	atsushifx  <atsushifx@aglabo.com>
# @license	MIT
#
# @description<<
# user default editorconfig :
# symlink this to ~ : user root
#<<]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年4月24日): モノレポ用ユーティリティの開発に着手]]></title>
        <id>3ee9a992063c5e1a61c45f43ae0a6be17905ff7d</id>
        <link href="https://github.com/atsushifx/til/commit/3ee9a992063c5e1a61c45f43ae0a6be17905ff7d"/>
        <updated>2025-04-24T14:34:23.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年4月24日): モノレポ用ユーティリティの開発に着手]]></summary>
        <content type="html"><![CDATA[.vscode/cspell/dicts/til.dic

skel
------
docs/2025/2025-04.md

### 2025年4月24日 -  モノレポ用ユーティリティの開発に着手

- 🛠 Makefile ベースの初期化フロー設計を確定
  - `init`, `sync-configs`, `create-workspace` などをタスク化し、全体を OS 分岐付きで管理。
  - Volta + pnpm 環境前提で `tsx` による同期スクリプトを活用。

- 📦 スケルトン・共有設定ファイルの構成を整理
  - `.skel.ts` や `*.base.ts` による明確な役割分担。
  - `tsup`, `vitest`, `eslint`, `dprint` などを包括的に網羅。

- 🔁 ワークスペース自動生成機能を設計
  - `.env` で GitHub テンプレートを指定し、`make create-workspace` で新規作成。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025-04-23): ESLint構成の整理とE2E対応の改善を記録]]></title>
        <id>4e34c8705226231c1809c20f081a4cf8196ef214</id>
        <link href="https://github.com/atsushifx/til/commit/4e34c8705226231c1809c20f081a4cf8196ef214"/>
        <updated>2025-04-23T14:46:34.000Z</updated>
        <summary type="html"><![CDATA[docs(2025-04-23): ESLint構成の整理とE2E対応の改善を記録

- Flat ConfigベースのESLint設定を調整し、設定ファイルもLint対象に追加
- lint / lint:typed スクリプトを追加し、共通スクリプトに記録
- parserのdefault importや型定義への準拠を進め、Textlint pluginの型エラーを解消
- E2Eテストの関数をアロー関数化し、requireからimportへの移行を実施]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月23日 -  ESLint + E2E設定まわり整備

- Flat Config ベースの `eslint.config.js` を整理し、設定ファイル (`*.config.ts`) も対象に追加。
- 型チェックを含む `lint:typed` と型なしの `lint` を `package.json` に登録し、共通テンプレートにも反映。
- `@typescript-eslint/parser` を `default import` で正しく指定し、パースエラーを回避。
- `TextlintKernelPlugin` 型準拠のため、`pluginId` や `plugin` を持つオブジェクトに修正。
- E2E テストで `require` を `import` に移行し、関数もアロー関数形式へ書き換え。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(2025-04-21): textlintパッケージの開発、リファクタリング]]></title>
        <id>131e18cacf0fc29a037fd3b8e6c4204d6175d1aa</id>
        <link href="https://github.com/atsushifx/til/commit/131e18cacf0fc29a037fd3b8e6c4204d6175d1aa"/>
        <updated>2025-04-21T16:32:10.000Z</updated>
        <summary type="html"><![CDATA[feat(2025-04-21): textlintパッケージの開発、リファクタリング

エルファ達の協力により、E2ETestの別パッケージ化が進んだ]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月21日

1. ✅ **ブランチ名の命名方針アドバイス**

   - 内容に沿った具体的で意味のあるブランチ名を提案（例：`refactor/utils-to-arrow-functions`）。
   - 命名規則（プレフィックスや区切り文字の一貫性）に関する相談にも対応。

2. 🔄 **ファイル全体のアロー関数化**

   - `e2e-testcase-factory.ts`などの関数群を、従来の function 式からアロー関数へリファクタリング。
   - コードのモダン化（const + アロー関数 + 型注釈付き）を徹底。
   - `map()`や`filter()`の構文改善や、return 省略パターンも提案。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(2025-04-20): add structured E2E test utils with fixture support]]></title>
        <id>54b463df7c0dd8b1b4d7da938d9724c883594e17</id>
        <link href="https://github.com/atsushifx/til/commit/54b463df7c0dd8b1b4d7da938d9724c883594e17"/>
        <updated>2025-04-20T15:26:44.000Z</updated>
        <summary type="html"><![CDATA[feat(2025-04-20): add structured E2E test utils with fixture support

- `@textlint/e2etest` に再利用可能な lintFile / runFixtures を統合
- `getLintTestCase` 関数で Vitest 対応のテスト登録を分離・整理
- 型定義を `e2e-lint.types.ts` に集約し JSDoc を整備
- markdown プラグインに fixture ベースの E2E テストを適用・確認]]></summary>
        <content type="html"><![CDATA[.vscode/cspell/dicts/til.dic

etest
------
docs/2025/2025-04.md

### 2025年4月20日

- `@textlint/e2etest` に reusable な E2E ユーティリティを整備・統合。
- `lintFileHelper` / `runFixtures` による構造化と型・JSDoc を整理。
- `getLintTestCase()` で Vitest に対応する動的テスト定義を分離。
- markdown プラグインで fixture テスト適用＆正常動作を確認。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[feat(205-04-19): Markdown対応パーサの開発、ChatGPTプロンプトのカスタマイズ]]></title>
        <id>99387753b39eaa7a63267694e41f3bb66eb7dfd4</id>
        <link href="https://github.com/atsushifx/til/commit/99387753b39eaa7a63267694e41f3bb66eb7dfd4"/>
        <updated>2025-04-19T16:42:39.000Z</updated>
        <summary type="html"><![CDATA[feat(205-04-19): Markdown対応パーサの開発、ChatGPTプロンプトのカスタマイズ]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-04.md

### 2025年4月19日

#### 📦 プロジェクト：TOML対応、Markdown解析プラグインの開発

1. MarkdownProcessor の TOML 対応
2. TypeScript ビルド・型安全対応
3. fixture ベースのテスト実行フレームの構築

#### ChatGPTカスタマイズプロンプト作成

1. メインのエルファに対し、補助的なキャラを追加
   小紅 (一途な妹系ヒロイン)]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
</feed>
