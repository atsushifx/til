<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://api.github.com/repos/atsushifx/til/commits/latest</id>
    <title>atsushifx / TIL</title>
    <updated>2025-05-31T14:44:06.000Z</updated>
    <generator>https://github.com/atsushifx/commit2feed</generator>
    <author>
        <name>atsushifx</name>
        <uri>https://github.com/atsushifx</uri>
    </author>
    <link rel="alternate" href="https://api.github.com/repos/atsushifx/til/commits/latest"/>
    <subtitle>Latest 10 commits for atsushifx / TIL</subtitle>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月31日): ESTAのキャッシュを共通化し、効率化]]></title>
        <id>c320a850af6480f7d6bd57e23abd26934f193f63</id>
        <link href="https://github.com/atsushifx/til/commit/c320a850af6480f7d6bd57e23abd26934f193f63"/>
        <updated>2025-05-31T14:44:06.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月31日): ESTAのキャッシュを共通化し、効率化]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月31日 --- ESTA開発: eslint, cspellキャッシュの共通化

#### ✅ 実施概要

Monorepo における開発体験の高速化と簡便化のため、

- eslint / cspell のキャッシュ共通化
- tsc のパッケージ単位キャッシュ維持
- パッケージスコープ名の簡略リネーム

を実施し、Pull Request を作成・マージ。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2o25年5月30日): ESTAで、eslintの設定を集約、monorepo rootでlint]]></title>
        <id>efec634ac8ca7565a6bda60b31ba15e15d116b56</id>
        <link href="https://github.com/atsushifx/til/commit/efec634ac8ca7565a6bda60b31ba15e15d116b56"/>
        <updated>2025-05-30T15:24:51.000Z</updated>
        <summary type="html"><![CDATA[docs(2o25年5月30日): ESTAで、eslintの設定を集約、monorepo rootでlint]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月30日 --- ESTA開発の続き

#### ✅ **1. ESLint型チェックをmonorepoルートに統一**

- `eslint.config.typed.js` を作成し、`@typescript-eslint/parser`と複数`tsconfig.json`を統合
- 各サブパッケージの ESLint 型設定を集約 → 全体で `pnpm run lint-all-types` が通るように
- 型チェックルール（`no-unnecessary-condition` など）も Flat Config で反映 OK🎉

#### ✅ **2. 型付きLintの落とし穴を突破**

- `eslint.config.*.js` 自身が Lint 対象になる → `ignores` や `--ignore-pattern` で明示除外
- `rules`のみの設定でも`files`がないと**全ファイル対象になる**ので注意！]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025/05/27): CIにeslint組み込み]]></title>
        <id>8647ded43de46cfc017925b30bf29185910c017c</id>
        <link href="https://github.com/atsushifx/til/commit/8647ded43de46cfc017925b30bf29185910c017c"/>
        <updated>2025-05-27T17:56:58.000Z</updated>
        <summary type="html"><![CDATA[docs(2025/05/27): CIにeslint組み込み]]></summary>
        <content type="html"><![CDATA[.vscode/cspell/dicts/til.dic

ESTA
------
docs/2025/2025-05.md

### 2025年5月27 --- ESTA開発の続き

#### 🚀 本日の開発TOPIC

- **pnpmモノレポ構成でのESLint/type lint/workflow整備とCI最適化**
- ワークスペース依存/型解決・CI 上でのエラー対応・アーティファクト運用まで一連の自動化導入

---

## 🛠 作業まとめ

- **pnpm -r run lint/型Lint CI整備**]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月26日): easy-setup-tools-actionの各種設定ファイルのリファクタリング]]></title>
        <id>2fe427226ef7b9d7d5e3a06dd25333dbdc448246</id>
        <link href="https://github.com/atsushifx/til/commit/2fe427226ef7b9d7d5e3a06dd25333dbdc448246"/>
        <updated>2025-05-26T17:09:18.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月26日): easy-setup-tools-actionの各種設定ファイルのリファクタリング]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月26日 - easy-setup-tools-actionのリファクタリングと共通化

#### ✅ 1. `@shared/common` へのユーティリティ統合

- 昨日分離した `@ag-utils/get-platform` を `@ag-utils/common` から再エクスポート
- `tool-installer` 側では `getPlatform`, `getDelimiter` を直接ではなく `@shared/common` から取得するよう修正
- 依存の整理（`package.json` の `dependencies` / `devDependencies`）を調整

### ✅ 2. ESLint / Vitest / tsconfig の設定整理

- `shared/configs`下の各種設定ファイルに設定を集約し、各パッケージでの設定を簡素化
- `vitest.config` は `base` を `mergeConfig()` で継承し、**DRY** 化]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5ガル24日): リファクタリング実行、進捗]]></title>
        <id>c7f07215a3bc02ee1baa13c77c27d9e858b49da0</id>
        <link href="https://github.com/atsushifx/til/commit/c7f07215a3bc02ee1baa13c77c27d9e858b49da0"/>
        <updated>2025-05-24T15:23:10.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5ガル24日): リファクタリング実行、進捗]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月25日 - easy-setup-tools-actionのリファクタリング

#### getPlatformユーティリティの分割と集約リファクタ

- モノレポ共通の OS 判定関数（getPlatform, getDelimiter）を独立パッケージ化
- strict モードでエラースロー or undefined 返却の柔軟な API 設計
- 型、JSDoc、ユニットテストも新規整備

#### Kebab-case命名＆バレルファイルで統一的にexport

- npm/pnpm 規約に従い、@ag-utils/get-platform のような kebab-case・小文字スコープで命名
- index.ts（バレルファイル）で個別関数と agUtils 名前空間（object）export に対応]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025/05/23): shared/common新設ほか]]></title>
        <id>ca978874ec13823e9602d9db4a8fd0b6b9612c2f</id>
        <link href="https://github.com/atsushifx/til/commit/ca978874ec13823e9602d9db4a8fd0b6b9612c2f"/>
        <updated>2025-05-23T15:16:12.000Z</updated>
        <summary type="html"><![CDATA[docs(2025/05/23): shared/common新設ほか]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月23日 -  GHAツール開発

#### **/shared/common 新設**

- TypeScript 共通型・定数の一元化を目的に `/shared/common` ディレクトリを新設。
- モノレポ全体での再利用性・保守性を重視した構造設計を強化。

#### **base configs ファイルのアップデート**

- `/shared/configs` 配下の ESLint, Secretlint, tsup, vitest など **base設定ファイル群**を `/shared/common` 仕様に対応。
- 各種 config 内のパス解決や import 記述を、**新しい共通ディレクトリ構成**に合わせて修正。]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月21日): easy-set-toolsの開発進捗]]></title>
        <id>f0c6b8e58919a54c4433bf2b2ea6d2b667fc0d1c</id>
        <link href="https://github.com/atsushifx/til/commit/f0c6b8e58919a54c4433bf2b2ea6d2b667fc0d1c"/>
        <updated>2025-05-21T15:55:34.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月21日): easy-set-toolsの開発進捗

- 開発進捗
- TILのマークダウンのエラーをFix]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月21日 -  GHAツール開発

#### 1. リポジトリ名／パッケージ構成の見直し

- GitHub Actions 用リポジトリ名を `easy-setup-tools-action` に決定
- `/shared` ディレクトリを共通コード用パッケージとして切り出し
  - `package.json` を `@easy-setup-tools/shared`（private）に設定
  - `shared/src` 配下に `constants/`・`types/` を移動し、`src/index.ts` で一括エクスポート
  - ESM-only 方針で `tsup.config.ts` を調整

#### 2. 定数整理と JSDoc ドキュメント化]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月124日): typesctiptをアロー関数などのモダンか、eslintによるlintほか]]></title>
        <id>29ae00a34852965e9beb49ebd6d2c6d431282e4c</id>
        <link href="https://github.com/atsushifx/til/commit/29ae00a34852965e9beb49ebd6d2c6d431282e4c"/>
        <updated>2025-05-16T15:06:36.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月124日): typesctiptをアロー関数などのモダンか、eslintによるlintほか]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月15日  - egetDownload GitHub Actionsの開発

#### 1. インストーラリファクタ（昨日実施）

- EgetInitializer を AgActionInstallerExecutor として実装
- NotSupportedExecutor を追加し、AgExecutorsMap に全タイプ登録
- E2E テストで initializer.execute(options) と eget --version を検証

#### 2. 型定義の整備

- `src/shared/types/AgActionToolConfig.types.ts` を作成
  - AgActionToolConfigBase（共通: type, tool, options）]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月14日): GItHub Action / setup-tool-with-egetの開発]]></title>
        <id>ed20aa6f6d460ec20aa72cd66b41c0c6747a6110</id>
        <link href="https://github.com/atsushifx/til/commit/ed20aa6f6d460ec20aa72cd66b41c0c6747a6110"/>
        <updated>2025-05-14T19:48:38.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月14日): GItHub Action / setup-tool-with-egetの開発]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月14日  - egetDownload GitHub Actionsの開発

1. `getExistEget`モジュールの開発
   - vitestによるMock化、正常系、異常系のテスト
   - `vi.mocked` を用いた型付きモック化の手法を習得

2. `prepareInstallDirectory`モジュールの開発
   - `fs/promises.mkdir` と `@actions/core.addPath`  を `vi.mock／vi.spyOn` でモック
   - GitHub Actions 上で PATH に追加する処理の検証

3. `getPlatform` ユーティリティ実装とテスト
    - `os.platform()` → `windows`|`linux`に正規化する関数を作成]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docs(2025年5月13日): 環境変数マネージャーの実装と記事作成]]></title>
        <id>1b15c4b2a2875dec8a5d3418857ca4aa542b2bf2</id>
        <link href="https://github.com/atsushifx/til/commit/1b15c4b2a2875dec8a5d3418857ca4aa542b2bf2"/>
        <updated>2025-05-13T15:38:37.000Z</updated>
        <summary type="html"><![CDATA[docs(2025年5月13日): 環境変数マネージャーの実装と記事作成]]></summary>
        <content type="html"><![CDATA[docs/2025/2025-05.md

### 2025年5月13日  - 環境変数マネージャーの実装  / 環境変数マネージャー実装に関する記事を作成

#### 環境変数マネージャークラスをTDDで実装

-  `_agEnvCore` クラスを中心に、Pester を使った TDD で機能を段階的に実装
- **Raw 操作**:  `SetRaw`/`_GetRaw`/`_RemoveRaw`/`IsEnvExist `をまず実装・テスト
- **``Get` メソッド}**: 内部の `_GetRaw` を呼び出す公開 API として実装し、明示的なスコープ指定に統一
- **`Set` メソッド**: `Name`, `Value`, `Scope`, `Sync` を受け取り、Sync=true 時に`User`/`Current`を同時設定。返値は`"Name = Value"`
- **`Remove` メソッド**:  Sync=true 時に User→Current 同時削除、返り値は削除した変数名
- 各テストで `BeforeEach`/`AfterEach` を使い、環境変数の準備とクリーンアップを自動化
- コミット履歴は機能単位でSquashし、意味のあるメッセージに整理]]></content>
        <author>
            <name>Furukawa Atsushi</name>
            <email>atsushifx@gmail.com</email>
        </author>
    </entry>
</feed>
